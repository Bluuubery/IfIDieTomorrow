spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}
    username: ${MYSQL_ID}
    password: ${MYSQL_PASS}
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        use_sql_comments : true
#        show_sql: true
#        format_sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    generate-ddl: true
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  batch:
    job:
      enabled: false


file:
  path: C:/images
cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket : ${S3_BUCKET}
    region:
      static: ap-northeast-2
    stack:
      auto: false

#Spring doc
springdoc:
  packages-to-scan:
    - com.a307.ifIDieTomorrow
  paths-to-match:
    - /*/**
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  swagger-ui:
    path: /swagger

#Actuator
management:
  endpoints:
    web:
      exposure:
        include:
          - '*'
  endpoint:
    health:
      show-details: always

# MatterMost Notification
notification:
  mattermost:
    webhook-url: ${MATTERMOST_URL}
    pretext: Web-BackEnd
    enabled: 'true'
  sms:
    url: 'https://sms.gabia.com/api/send/lms'
    oauth: 'https://sms.gabia.com/oauth/token'
    id: ${SMS_ID}
    apikey: ${SMS_APIKEY}
    callback: ${SMS_CALLBACK}

# cors 설정
cors:
  allowed-origins: 'http://localhost:3000, http://localhost:8080, http://ifidietomorrow.co.kr, https://ifidietomorrow.co.kr, http://www.ifidietomorrow.co.kr, https://www.ifidietomorrow.co.kr, http://www.ifidietomorrow.duckdns.org ,https://www.ifidietomorrow.duckdns.org, http://ifidietomorrow.duckdns.org ,https://ifidietomorrow.duckdns.org'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: '*'
  max-age: 3600

# ssl 설정
server:
  servlet:
    session:
      cookie:
        same-site: none
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: ${SSL_PASSWORD}      # 비밀번호를 입력한 경우
    key-store-type: PKCS12

# admin 설정
admin:
  email: ${ADMIN_EMAIL}


